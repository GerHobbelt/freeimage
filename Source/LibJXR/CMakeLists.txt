# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Target: libjxr
set(libjxr_SOURCES
	"image/decode/JXRTranscode.c"
	"image/decode/decode.c"
	"image/decode/postprocess.c"
	"image/decode/segdec.c"
	"image/decode/strInvTransform.c"
	"image/decode/strPredQuantDec.c"
	"image/decode/strdec.c"
	"image/decode/strdec_x86.c"
	"image/encode/encode.c"
	"image/encode/segenc.c"
	"image/encode/strFwdTransform.c"
	"image/encode/strPredQuantEnc.c"
	"image/encode/strenc.c"
	"image/encode/strenc_x86.c"
	"image/sys/adapthuff.c"
	"image/sys/image.c"
	"image/sys/perfTimerANSI.c"
	"image/sys/strPredQuant.c"
	"image/sys/strTransform.c"
	"image/sys/strcodec.c"
	"jxrgluelib/JXRGlue.c"
	"jxrgluelib/JXRGlueJxr.c"
	"jxrgluelib/JXRGluePFC.c"
	"jxrgluelib/JXRMeta.c"
	cmake.toml
)

add_library(libjxr)

target_sources(libjxr PRIVATE ${libjxr_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${libjxr_SOURCES})

target_compile_definitions(libjxr PUBLIC
	_LIB
)

if((CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND NOT CMAKE_CXX_COMPILER_FRONTEND_VARIANT MATCHES "^MSVC$") OR (CMAKE_C_COMPILER_ID MATCHES "Clang" AND NOT CMAKE_C_COMPILER_FRONTEND_VARIANT MATCHES "^MSVC$")) # clang
	target_compile_options(libjxr PUBLIC
		-Wno-everything
	)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "GNU") # gcc
	target_compile_options(libjxr PUBLIC
		-Wno-everything
	)
endif()

if(MSVC) # msvc
	target_compile_options(libjxr PUBLIC
		"/W0"
	)
endif()

target_include_directories(libjxr PUBLIC
	.
)

target_compile_definitions(libjxr PUBLIC
	DISABLE_PERF_MEASUREMENT
)

if(UNIX) # unix
	target_compile_definitions(libjxr PUBLIC
		__ANSI__
	)
endif()

target_include_directories(libjxr PUBLIC
	"image/sys/"
	"jxrgluelib/"
	"common/include/"
)

