# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Variables
set(CMAKE_CXX_STANDARD 14)

# Target: openexr
set(openexr_SOURCES
	"IexMath/IexMathFpu.cpp"
	"IlmImf/ImfAcesFile.cpp"
	"IlmImf/ImfAttribute.cpp"
	"IlmImf/ImfB44Compressor.cpp"
	"IlmImf/ImfBoxAttribute.cpp"
	"IlmImf/ImfChannelList.cpp"
	"IlmImf/ImfChannelListAttribute.cpp"
	"IlmImf/ImfChromaticities.cpp"
	"IlmImf/ImfChromaticitiesAttribute.cpp"
	"IlmImf/ImfCompositeDeepScanLine.cpp"
	"IlmImf/ImfCompressionAttribute.cpp"
	"IlmImf/ImfCompressor.cpp"
	"IlmImf/ImfConvert.cpp"
	"IlmImf/ImfCRgbaFile.cpp"
	"IlmImf/ImfDeepCompositing.cpp"
	"IlmImf/ImfDeepFrameBuffer.cpp"
	"IlmImf/ImfDeepImageStateAttribute.cpp"
	"IlmImf/ImfDeepScanLineInputFile.cpp"
	"IlmImf/ImfDeepScanLineInputPart.cpp"
	"IlmImf/ImfDeepScanLineOutputFile.cpp"
	"IlmImf/ImfDeepScanLineOutputPart.cpp"
	"IlmImf/ImfDeepTiledInputFile.cpp"
	"IlmImf/ImfDeepTiledInputPart.cpp"
	"IlmImf/ImfDeepTiledOutputFile.cpp"
	"IlmImf/ImfDeepTiledOutputPart.cpp"
	"IlmImf/ImfDoubleAttribute.cpp"
	"IlmImf/ImfDwaCompressor.cpp"
	"IlmImf/ImfEnvmap.cpp"
	"IlmImf/ImfEnvmapAttribute.cpp"
	"IlmImf/ImfFastHuf.cpp"
	"IlmImf/ImfFloatAttribute.cpp"
	"IlmImf/ImfFloatVectorAttribute.cpp"
	"IlmImf/ImfFrameBuffer.cpp"
	"IlmImf/ImfFramesPerSecond.cpp"
	"IlmImf/ImfGenericInputFile.cpp"
	"IlmImf/ImfGenericOutputFile.cpp"
	"IlmImf/ImfHeader.cpp"
	"IlmImf/ImfHuf.cpp"
	"IlmImf/ImfInputFile.cpp"
	"IlmImf/ImfInputPart.cpp"
	"IlmImf/ImfInputPartData.cpp"
	"IlmImf/ImfIntAttribute.cpp"
	"IlmImf/ImfIO.cpp"
	"IlmImf/ImfKeyCode.cpp"
	"IlmImf/ImfKeyCodeAttribute.cpp"
	"IlmImf/ImfLineOrderAttribute.cpp"
	"IlmImf/ImfLut.cpp"
	"IlmImf/ImfMatrixAttribute.cpp"
	"IlmImf/ImfMisc.cpp"
	"IlmImf/ImfMultiPartInputFile.cpp"
	"IlmImf/ImfMultiPartOutputFile.cpp"
	"IlmImf/ImfMultiView.cpp"
	"IlmImf/ImfOpaqueAttribute.cpp"
	"IlmImf/ImfOutputFile.cpp"
	"IlmImf/ImfOutputPart.cpp"
	"IlmImf/ImfOutputPartData.cpp"
	"IlmImf/ImfPartType.cpp"
	"IlmImf/ImfPizCompressor.cpp"
	"IlmImf/ImfPreviewImage.cpp"
	"IlmImf/ImfPreviewImageAttribute.cpp"
	"IlmImf/ImfPxr24Compressor.cpp"
	"IlmImf/ImfRational.cpp"
	"IlmImf/ImfRationalAttribute.cpp"
	"IlmImf/ImfRgbaFile.cpp"
	"IlmImf/ImfRgbaYca.cpp"
	"IlmImf/ImfRle.cpp"
	"IlmImf/ImfRleCompressor.cpp"
	"IlmImf/ImfScanLineInputFile.cpp"
	"IlmImf/ImfStandardAttributes.cpp"
	"IlmImf/ImfStdIO.cpp"
	"IlmImf/ImfStringAttribute.cpp"
	"IlmImf/ImfStringVectorAttribute.cpp"
	"IlmImf/ImfSystemSpecific.cpp"
	"IlmImf/ImfTestFile.cpp"
	"IlmImf/ImfThreading.cpp"
	"IlmImf/ImfTileDescriptionAttribute.cpp"
	"IlmImf/ImfTiledInputFile.cpp"
	"IlmImf/ImfTiledInputPart.cpp"
	"IlmImf/ImfTiledMisc.cpp"
	"IlmImf/ImfTiledOutputFile.cpp"
	"IlmImf/ImfTiledOutputPart.cpp"
	"IlmImf/ImfTiledRgbaFile.cpp"
	"IlmImf/ImfTileOffsets.cpp"
	"IlmImf/ImfTimeCode.cpp"
	"IlmImf/ImfTimeCodeAttribute.cpp"
	"IlmImf/ImfVecAttribute.cpp"
	"IlmImf/ImfVersion.cpp"
	"IlmImf/ImfWav.cpp"
	"IlmImf/ImfZip.cpp"
	"IlmImf/ImfZipCompressor.cpp"
	"Imath/ImathBox.cpp"
	"Imath/ImathColorAlgo.cpp"
	"Imath/ImathFun.cpp"
	"Imath/ImathMatrixAlgo.cpp"
	"Imath/ImathRandom.cpp"
	"Imath/ImathShear.cpp"
	"Imath/ImathVec.cpp"
	"Iex/IexBaseExc.cpp"
	"Iex/IexThrowErrnoExc.cpp"
	"Half/half.cpp"
	"IlmThread/IlmThread.cpp"
	"IlmThread/IlmThreadMutex.cpp"
	"IlmThread/IlmThreadPool.cpp"
	"IlmThread/IlmThreadSemaphore.cpp"
	"IexMath/IexMathFloatExc.cpp"
	cmake.toml
)

add_library(openexr)

target_sources(openexr PRIVATE ${openexr_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${openexr_SOURCES})

target_compile_definitions(openexr PUBLIC
	_LIB
)

if((CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND NOT CMAKE_CXX_COMPILER_FRONTEND_VARIANT MATCHES "^MSVC$") OR (CMAKE_C_COMPILER_ID MATCHES "Clang" AND NOT CMAKE_C_COMPILER_FRONTEND_VARIANT MATCHES "^MSVC$")) # clang
	target_compile_options(openexr PUBLIC
		-Wno-everything
	)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "GNU") # gcc
	target_compile_options(openexr PUBLIC
		-Wno-everything
	)
endif()

if(MSVC) # msvc
	target_compile_options(openexr PUBLIC
		"/W0"
	)
endif()

target_include_directories(openexr PUBLIC
	.
)

target_compile_features(openexr PUBLIC
	cxx_std_14
)

target_include_directories(openexr PUBLIC
	"IlmImf/"
	"Imath/"
	"IexMath/"
	"Iex/"
	"Half/"
	"IlmThread/"
)

target_link_libraries(openexr PUBLIC
	zlib
)

